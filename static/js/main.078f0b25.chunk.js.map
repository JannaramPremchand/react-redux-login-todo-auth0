{"version":3,"sources":["components/LoginButton.js","components/LogoutButton.js","redux/reducer.js","components/TodoItem.js","components/DisplayTodos.js","components/Todos.js","components/Todoapp.js","components/Profile.js","components/Home.js","redux/store.js","App.js","index.js"],"names":["LoginButton","useAuth0","loginWithRedirect","isAuthenticated","Nav","justify","variant","className","Item","Button","onClick","LogoutButton","logout","addTodoReducer","createSlice","name","initialState","reducers","addTodos","state","action","push","payload","removeTodos","filter","item","id","updateTodos","map","todo","completeTodos","completed","actions","reducer","TodoItem","props","updateTodo","removeTodo","completeTodo","inputRef","useRef","motion","li","initial","x","transition","type","duration","animate","whileHover","scale","exit","backgroundColor","ref","disabled","defaultValue","onKeyPress","e","value","which","current","update","button","whileTap","focus","style","color","connect","todos","dispatch","addTodo","obj","useState","sort","setSort","AnimatePresence","length","setTodo","onChange","target","handleChange","alert","Math","floor","random","Todoapp","Navbar","Collapse","Text","href","person","h1","y","div","Profile","user","nickname","Home","bg","Container","Brand","alt","src","width","height","store","configureStore","App","StrictMode","ReactDOM","render","domain","process","clientId","redirectUri","window","location","origin","document","getElementById"],"mappings":"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","file":"static/js/main.078f0b25.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useAuth0 } from '@auth0/auth0-react';\r\nimport { Nav, Button } from 'react-bootstrap';\r\n\r\nconst LoginButton = () => {\r\n  const { loginWithRedirect, isAuthenticated } = useAuth0();\r\n\r\n  return (\r\n    !isAuthenticated && (\r\n      <Nav justify variant=\"tabs\" className=\"justify-content-end\" >\r\n  <Nav.Item>\r\n  <Button variant='success' onClick={() => loginWithRedirect()}>\r\n        Log In\r\n      </Button>\r\n  \r\n  </Nav.Item>\r\n </Nav>\r\n      \r\n\r\n    )\r\n  )\r\n}\r\n\r\nexport default LoginButton\r\n","import React from 'react';\r\nimport { useAuth0 } from '@auth0/auth0-react';\r\nimport { Nav , Button } from 'react-bootstrap'\r\n\r\nconst LogoutButton = () => {\r\n  const { logout, isAuthenticated } = useAuth0();\r\n\r\n  return (\r\n    isAuthenticated && (\r\n      <>\r\n     <Nav justify variant=\"tabs\" className=\"justify-content-end\" >\r\n  <Nav.Item>\r\n  <Button onClick={() => logout()}>\r\n        Log Out\r\n      </Button>\r\n  \r\n  </Nav.Item>\r\n  \r\n</Nav>\r\n\r\n\r\n      </>\r\n    )\r\n  )\r\n}\r\n\r\nexport default LogoutButton\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\nconst initialState = [];\r\n\r\nconst addTodoReducer = createSlice({\r\n  name: \"todos\",\r\n  initialState,\r\n  reducers: {\r\n    \r\n    //Adding todos\r\n    addTodos: (state, action) => {\r\n      state.push(action.payload);\r\n      return state;\r\n    },\r\n    //remove todos\r\n    removeTodos: (state, action) => {\r\n      return state.filter((item) => item.id !== action.payload);\r\n    },\r\n    //update todos\r\n    updateTodos: (state, action) => {\r\n      return state.map((todo) => {\r\n        if (todo.id === action.payload.id) {\r\n          return {\r\n            ...todo,\r\n            item: action.payload.item,\r\n          };\r\n        }\r\n        return todo;\r\n      });\r\n    },\r\n    //completed\r\n    completeTodos: (state, action) => {\r\n      return state.map((todo) => {\r\n        if (todo.id === action.payload) {\r\n          return {\r\n            ...todo,\r\n            completed: true,\r\n          };\r\n        }\r\n        return todo;\r\n      });\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  addTodos,\r\n  removeTodos,\r\n  updateTodos,\r\n  completeTodos,\r\n} = addTodoReducer.actions;\r\nexport const reducer = addTodoReducer.reducer;\r\n","import { motion } from \"framer-motion\";\r\nimport React, { useRef } from \"react\";\r\nimport { AiFillEdit } from \"react-icons/ai\";\r\nimport { IoCheckmarkDoneSharp, IoClose } from \"react-icons/io5\";\r\n\r\nconst TodoItem = (props) => {\r\n  const { item, updateTodo, removeTodo, completeTodo } = props;\r\n\r\n  const inputRef = useRef(true);\r\n\r\n  const changeFocus = () => {\r\n    inputRef.current.disabled = false;\r\n    inputRef.current.focus();\r\n  };\r\n\r\n  const update = (id, value, e) => {\r\n    if (e.which === 13) {\r\n      //here 13 is key code for enter key\r\n      updateTodo({ id, item: value });\r\n      inputRef.current.disabled = true;\r\n    }\r\n  };\r\n  return (\r\n    <motion.li\r\n      initial={{ x: \"150vw\", transition: { type: \"spring\", duration: 2 } }}\r\n      animate={{ x: 0, transition: { type: \"spring\", duration: 2 } }}\r\n      whileHover={{\r\n        scale: 0.9,\r\n        transition: { type: \"spring\", duration: 0.1 },\r\n      }}\r\n      exit={{\r\n        x: \"-60vw\",\r\n        scale: [1, 0],\r\n        transition: { duration: 0.5 },\r\n        backgroundColor: \"rgba(255,0,0,1)\",\r\n      }}\r\n      key={item.id}\r\n      className=\"card\"\r\n    >\r\n      <textarea\r\n        ref={inputRef}\r\n        disabled={inputRef}\r\n        defaultValue={item.item}\r\n        onKeyPress={(e) => update(item.id, inputRef.current.value, e)}\r\n      />\r\n      <div className=\"btns\">\r\n        <motion.button\r\n          whileHover={{ scale: 1.4 }}\r\n          whileTap={{ scale: 0.9 }}\r\n          onClick={() => changeFocus()}\r\n        >\r\n          {\" \"}\r\n          <AiFillEdit />{\" \"}\r\n        </motion.button>\r\n        {item.completed === false && (\r\n          <motion.button\r\n            whileHover={{ scale: 1.4 }}\r\n            whileTap={{ scale: 0.9 }}\r\n            style={{ color: \"green\" }}\r\n            onClick={() => completeTodo(item.id)}\r\n          >\r\n            <IoCheckmarkDoneSharp />\r\n          </motion.button>\r\n        )}\r\n        <motion.button\r\n          whileHover={{ scale: 1.4 }}\r\n          whileTap={{ scale: 0.9 }}\r\n          style={{ color: \"red\" }}\r\n          onClick={() => removeTodo(item.id)}\r\n        >\r\n          {\" \"}\r\n          <IoClose />\r\n        </motion.button>{\" \"}\r\n      </div>\r\n      {item.completed && <span className=\"completed\">done</span>}\r\n    </motion.li>\r\n  );\r\n};\r\n\r\nexport default TodoItem;\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  addTodos,\r\n  completeTodos,\r\n  removeTodos,\r\n  updateTodos,\r\n} from \"../redux/reducer\";\r\nimport TodoItem from \"./TodoItem\";\r\nimport { AnimatePresence, motion } from \"framer-motion\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    todos: state,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addTodo: (obj) => dispatch(addTodos(obj)),\r\n    removeTodo: (id) => dispatch(removeTodos(id)),\r\n    updateTodo: (obj) => dispatch(updateTodos(obj)),\r\n    completeTodo: (id) => dispatch(completeTodos(id)),\r\n  };\r\n};\r\n\r\nconst DisplayTodos = (props) => {\r\n  const [sort, setSort] = useState(\"active\");\r\n  return (\r\n    <div className=\"displaytodos\">\r\n      <div className=\"buttons\">\r\n        <motion.button\r\n          whileHover={{ scale: 1.1 }}\r\n          whileTap={{ scale: 0.9 }}\r\n          onClick={() => setSort(\"active\")}\r\n          className=\"btn\"\r\n        >\r\n          Active\r\n        </motion.button>\r\n        <motion.button\r\n          whileHover={{ scale: 1.1 }}\r\n          whileTap={{ scale: 0.9 }}\r\n          onClick={() => setSort(\"completed\")}\r\n          className=\"btn\"\r\n        >\r\n          Completed\r\n        </motion.button>\r\n        <motion.button\r\n          whileHover={{ scale: 1.1 }}\r\n          whileTap={{ scale: 0.9 }}\r\n          onClick={() => setSort(\"all\")}\r\n          className=\"btn\"\r\n        >\r\n          All\r\n        </motion.button>\r\n      </div>\r\n      <ul>\r\n        <AnimatePresence>\r\n          {props.todos.length > 0 && sort === \"active\"\r\n            ? props.todos.map((item) => {\r\n                return (\r\n                  item.completed === false && (\r\n                    <TodoItem\r\n                      key={item.id}\r\n                      item={item}\r\n                      removeTodo={props.removeTodo}\r\n                      updateTodo={props.updateTodo}\r\n                      completeTodo={props.completeTodo}\r\n                    />\r\n                  )\r\n                );\r\n              })\r\n            : null}\r\n          {/* for completed items */}\r\n          {props.todos.length > 0 && sort === \"completed\"\r\n            ? props.todos.map((item) => {\r\n                return (\r\n                  item.completed === true && (\r\n                    <TodoItem\r\n                      key={item.id}\r\n                      item={item}\r\n                      removeTodo={props.removeTodo}\r\n                      updateTodo={props.updateTodo}\r\n                      completeTodo={props.completeTodo}\r\n                    />\r\n                  )\r\n                );\r\n              })\r\n            : null}\r\n          {/* for all items */}\r\n          {props.todos.length > 0 && sort === \"all\"\r\n            ? props.todos.map((item) => {\r\n                return (\r\n                  <TodoItem\r\n                    key={item.id}\r\n                    item={item}\r\n                    removeTodo={props.removeTodo}\r\n                    updateTodo={props.updateTodo}\r\n                    completeTodo={props.completeTodo}\r\n                  />\r\n                );\r\n              })\r\n            : null}\r\n        </AnimatePresence>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DisplayTodos);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addTodos } from \"../redux/reducer\";\r\nimport { GoPlus } from \"react-icons/go\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    todos: state,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addTodo: (obj) => dispatch(addTodos(obj)),\r\n  };\r\n};\r\n\r\nconst Todos = (props) => {\r\n  const [todo, setTodo] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    setTodo(e.target.value);\r\n  };\r\n\r\n  const add = () => {\r\n    if (todo === \"\") {\r\n      alert(\"Input is Empty\");\r\n    } else {\r\n      props.addTodo({\r\n        id: Math.floor(Math.random() * 1000),\r\n        item: todo,\r\n        completed: false,\r\n      });\r\n      setTodo(\"\");\r\n    }\r\n  };\r\n  //console.log(\"props from store\", props);\r\n  return (\r\n    <div className=\"addTodos\">\r\n      <input\r\n        type=\"text\"\r\n        onChange={(e) => handleChange(e)}\r\n        className=\"todo-input\"\r\n        value={todo}\r\n      />\r\n\r\n      <motion.button\r\n        whileHover={{ scale: 1.1 }}\r\n        whileTap={{ scale: 0.9 }}\r\n        className=\"add-btn\"\r\n        onClick={() => add()}\r\n      >\r\n        <GoPlus />\r\n      </motion.button>\r\n      <br />\r\n    </div>\r\n  );\r\n};\r\n//we can use connect method to connect this component with redux store\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Todos);\r\n","import React from 'react';\r\nimport DisplayTodos from './DisplayTodos';\r\nimport Todos from './Todos';\r\nimport { motion } from \"framer-motion\";\r\nimport { Navbar } from 'react-bootstrap'\r\n\r\nfunction Todoapp(props) {\r\n    return (\r\n        <div>\r\n          <Navbar>\r\n          <Navbar.Collapse className=\"justify-content-start\">\r\n      <Navbar.Text>\r\n        Signed in as: <a href=\"#login\">{props.person}</a>\r\n      </Navbar.Text>\r\n    </Navbar.Collapse>\r\n  </Navbar>\r\n            <div className=\"App\">\r\n      <motion.h1\r\n        initial={{ y: -200 }}\r\n        animate={{ y: 0 }}\r\n        transition={{ type: \"spring\", duration: 0.5 }}\r\n        whileHover={{ scale: 1.1 }}\r\n      >\r\n        Todo App\r\n      </motion.h1>\r\n      <motion.div\r\n        initial={{ y: 1000 }}\r\n        animate={{ y: 0 }}\r\n        transition={{ type: \"spring\", duration: 1 }}\r\n      >\r\n        <Todos />\r\n        <DisplayTodos />\r\n      </motion.div>\r\n    </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todoapp\r\n","import React from 'react';\r\nimport './Style.css';\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport Todoapp from './Todoapp';\r\n\r\n\r\nconst Profile = () => {\r\n  const { user, isAuthenticated } = useAuth0();\r\n\r\n  return (\r\n    \r\n    isAuthenticated && ( \r\n    \r\n      <div>\r\n        \r\n  <Todoapp person={user.nickname}/>\r\n      </div>\r\n    )\r\n  )\r\n}\r\n\r\nexport default Profile\r\n","import React from \"react\";\r\nimport \"./Style.css\";\r\nimport LoginButton from \"./LoginButton\";\r\nimport LogoutButton from \"./LogoutButton\";\r\nimport Profile from \"./Profile\";\r\nimport { Navbar, Container } from \"react-bootstrap\";\r\n\r\n\r\nfunction Home(props) {\r\n  return (\r\n    <>\r\n \r\n      <Navbar bg=\"dark\" variant=\"dark\">\r\n        <Container>\r\n          <Navbar.Brand href=\"#home\">\r\n            <img\r\n              alt=\"\"\r\n              src=\"/Images/logo.png\"\r\n              width=\"30\"\r\n              height=\"50\"\r\n              className=\"d-inline-block align-top logo\"\r\n            />\r\n          </Navbar.Brand>\r\n          <LoginButton />\r\n          <LogoutButton />\r\n        </Container>\r\n      </Navbar>\r\n      <div>\r\n        <Profile />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { reducer } from \"./reducer\";\r\n\r\nconst store = configureStore({\r\n  reducer: reducer,\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport './components/Style.css'\r\nimport Home from './components/Home';\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\nfunction App() {\r\n  \r\n\r\n  return (\r\n    <>\r\n    <React.StrictMode>\r\n    <Provider store={store}>\r\n     <Home/>\r\n     </Provider>\r\n  </React.StrictMode>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { Auth0Provider } from '@auth0/auth0-react';\r\n\r\nconst domain = process.env.REACT_APP_AUTH0_DOMAIN;\r\nconst clientId = process.env.REACT_APP_AUTH0_CLIENT_ID;\r\n\r\nReactDOM.render(\r\n  <Auth0Provider\r\n    domain={domain}\r\n    clientId={clientId}\r\n    redirectUri={window.location.origin}>\r\n    <App />\r\n  </Auth0Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}